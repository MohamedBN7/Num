#include <stdio.h>
#include <stdlib.h>

typedef struct node {
    int data;
    struct node *next;
} Node;

Node *head = NULL;

void add(int num);
void delete(int num);
void show();

int main() {
    int choice, num;

    do {
        printf("\n\n");
        printf("1. Add number\n");
        printf("2. Delete number\n");
        printf("3. Show numbers\n");
        printf("4. Exit\n");
        printf("Enter choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter number to add: ");
                scanf("%d", &num);
                add(num);
                break;
            case 2:
                printf("Enter number to delete: ");
                scanf("%d", &num);
                delete(num);
                break;
            case 3:
                show();
                break;
            case 4:
                exit(0);
            default:
                printf("Invalid choice!\n");
        }
    } while (1);

    return 0;
}

void add(int num) {
    Node *new_node = malloc(sizeof(Node));
    new_node->data = num;
    new_node->next = NULL;

    if (head == NULL) {
        head = new_node;
    } else {
        Node *temp = head;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = new_node;
    }

    printf("Number %d added!\n", num);
}

void delete(int num) {
    if (head == NULL) {
        printf("List is empty!\n");
        return;
    }

    Node *temp = head;
    Node *prev = NULL;

    while (temp != NULL && temp->data != num) {
        prev = temp;
        temp = temp->next;
    }

    if (temp == NULL) {
        printf("Number not found!\n");
        return;
    }

    if (prev == NULL) {
        head = temp->next;
    } else {
        prev->next = temp->next;
    }

    free(temp);
    printf("Number %d deleted!\n", num);
}

void show() {
    if (head == NULL) {
        printf("List is empty!\n");
        return;
    }

    Node *temp = head;

    printf("Numbers: ");
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}